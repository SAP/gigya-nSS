name: Nss Schema Dev ST2 CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_schema:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./nss-schema

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Using Node
        uses: actions/setup-node@v2
        
      - name: Npm Install
        run: npm install

      - name: Build
        run: npm run release
        
      - name: Upload math result for job 1
        uses: actions/upload-artifact@v2
        with:
          name: schema
          path: nss-schema/output/
          
  build_engine:
     runs-on: ubuntu-latest
     needs: build_schema
     defaults:
       run:
        working-directory: ./
        
     steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download math result for job 1
        uses: actions/download-artifact@v2
        with:
          name: schema
          
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.1.0'

      - name: Configuration
        run: |
          flutter config --enable-web
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          
      - name: Build
        run: flutter build web -t lib/main_web.dart
      
      - name: Remove base line
        shell: bash
        run: |
          sed -i '14d' build/web/index.html
          
      - name: Copy files
        shell: bash
        run: |
          cp -r build/web versions/*/
          mkdir temp
          cp -r example.json temp/example.json
          cp -r nSS-schema.json temp/schema.json
          cp -r versions temp/
          cp -r build/web temp/web/
          
      - name: Deploy
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'temp/'
          destination_dir: 'nSS/st2/'
